generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(uuid())
  email     String     @unique
  name      String?
  password  String
  posts     Blog[]
  comments  Comment[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  likes     Blog[]     @relation("Likes")
  saved     Blog[]     @relation("Saved")
  following Following[] @relation("Following_follower")
  followers Following[] @relation("Following_following")
}

model Blog {
  id        String   @id @default(uuid())
  title     String
  content   String
  published Boolean  @default(false)
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String
  comments  Comment[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  likedBy   User[]   @relation("Likes")
  savedBy   User[]   @relation("Saved")
}

model Comment {
  id        String   @id @default(uuid())
  title     String
  content   String
  post      Blog     @relation(fields: [blogId], references: [id], onDelete: Cascade)
  blogId    String
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Following {
  followerId  String
  followingId String
  follower    User @relation("Following_follower", fields: [followerId], references: [id])
  following   User @relation("Following_following", fields: [followingId], references: [id])
  
  //composite primary key to ensure no duplicate pair entries exist
  @@id([followerId, followingId])
}
